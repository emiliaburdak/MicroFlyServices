version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '16708:16708'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '17229:17229'
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:16708
      - KAFKA_LISTENERS=PLAINTEXT://:17229
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:17229
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - '18538:18538'
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:17229
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:16708
    depends_on:
      - kafka
      - zookeeper

  flight_service:
    build:
      context: ./flight_service
    ports:
      - '16709:16709'

  booking_service:
    build:
      context: ./booking_service
    ports:
      - '17230:17230'
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:17229
      - ALGORITHM=HS256
      - USER_KEY=dev-user-super-secret-key

  user_service:
    build:
      context: ./user_service
    ports:
      - '18539:18539'
    environment:
      - ACCESS_TOKEN_EXPIRE_MINUTES=43200
      - ALGORITHM=HS256
      - SECRET_KEY=dev-user-super-secret-key

  gateway_service:
    build:
      context: ./gateway_service
    ports:
      - '16710:16710'
    depends_on:
      - flight_service
      - booking_service
      - user_service
